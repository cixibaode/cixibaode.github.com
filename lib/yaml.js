// Generated by CoffeeScript 1.6.3
(function() {
  var Yaml, events, fs, path, yaml,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  events = require('events');

  path = require('path');

  fs = require('fs');

  yaml = require('yamljs');

  Yaml = (function(_super) {
    __extends(Yaml, _super);

    function Yaml(options) {
      this.options = options || {};
      this.file = this.options.file;
      if (false === fs.existsSync(this.file)) {
        fs.writeFileSync(this.file, '');
      }
    }

    Yaml.prototype.keys = function() {
      var info;
      info = yaml.load(this.file);
      return info;
    };

    Yaml.prototype.get = function(key) {
      var info;
      info = this.keys();
      return info && info[key];
    };

    Yaml.prototype.set = function(key, value) {
      var info, str;
      info = this.keys() || {};
      info[key] = value;
      str = yaml.stringify(info, 4);
      return fs.writeFileSync(this.file, str);
    };

    Yaml.prototype.remove = function(key) {
      var info, str;
      info = this.keys() || {};
      delete info[key];
      str = yaml.stringify(info, 4);
      return fs.writeFileSync(this.file, str);
    };

    return Yaml;

  })(events.EventEmitter);

  module.exports = function(options) {
    return new Yaml(options);
  };

}).call(this);
